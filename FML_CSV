{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Copy of Untitled4.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNbGNod9kuxbF6xIR7loDm8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Raviteja-544/Game-Of-Thrones/blob/main/FML_CSV\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ryt1TRhbXSTw"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn import linear_model\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Load the data \n",
        "data = pd.read_csv(\"boston.csv\")\n",
        "data.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "O3ifD9yabX0L",
        "outputId": "6dac49be-c7d6-4756-c830-1df2dd1269da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      crim    zn  indus  chas    nox     rm   age     dis  rad  tax  ptratio  \\\n",
              "0  0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296     15.3   \n",
              "1  0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242     17.8   \n",
              "2  0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242     17.8   \n",
              "3  0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222     18.7   \n",
              "4  0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222     18.7   \n",
              "\n",
              "        b  lstat  medv  \n",
              "0  396.90   4.98  24.0  \n",
              "1  396.90   9.14  21.6  \n",
              "2  392.83   4.03  34.7  \n",
              "3  394.63   2.94  33.4  \n",
              "4  396.90   5.33  36.2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7e86f834-2bbb-4beb-b919-c46150a25063\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>crim</th>\n",
              "      <th>zn</th>\n",
              "      <th>indus</th>\n",
              "      <th>chas</th>\n",
              "      <th>nox</th>\n",
              "      <th>rm</th>\n",
              "      <th>age</th>\n",
              "      <th>dis</th>\n",
              "      <th>rad</th>\n",
              "      <th>tax</th>\n",
              "      <th>ptratio</th>\n",
              "      <th>b</th>\n",
              "      <th>lstat</th>\n",
              "      <th>medv</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.00632</td>\n",
              "      <td>18.0</td>\n",
              "      <td>2.31</td>\n",
              "      <td>0</td>\n",
              "      <td>0.538</td>\n",
              "      <td>6.575</td>\n",
              "      <td>65.2</td>\n",
              "      <td>4.0900</td>\n",
              "      <td>1</td>\n",
              "      <td>296</td>\n",
              "      <td>15.3</td>\n",
              "      <td>396.90</td>\n",
              "      <td>4.98</td>\n",
              "      <td>24.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.02731</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.469</td>\n",
              "      <td>6.421</td>\n",
              "      <td>78.9</td>\n",
              "      <td>4.9671</td>\n",
              "      <td>2</td>\n",
              "      <td>242</td>\n",
              "      <td>17.8</td>\n",
              "      <td>396.90</td>\n",
              "      <td>9.14</td>\n",
              "      <td>21.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.02729</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.469</td>\n",
              "      <td>7.185</td>\n",
              "      <td>61.1</td>\n",
              "      <td>4.9671</td>\n",
              "      <td>2</td>\n",
              "      <td>242</td>\n",
              "      <td>17.8</td>\n",
              "      <td>392.83</td>\n",
              "      <td>4.03</td>\n",
              "      <td>34.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.03237</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.18</td>\n",
              "      <td>0</td>\n",
              "      <td>0.458</td>\n",
              "      <td>6.998</td>\n",
              "      <td>45.8</td>\n",
              "      <td>6.0622</td>\n",
              "      <td>3</td>\n",
              "      <td>222</td>\n",
              "      <td>18.7</td>\n",
              "      <td>394.63</td>\n",
              "      <td>2.94</td>\n",
              "      <td>33.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.06905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.18</td>\n",
              "      <td>0</td>\n",
              "      <td>0.458</td>\n",
              "      <td>7.147</td>\n",
              "      <td>54.2</td>\n",
              "      <td>6.0622</td>\n",
              "      <td>3</td>\n",
              "      <td>222</td>\n",
              "      <td>18.7</td>\n",
              "      <td>396.90</td>\n",
              "      <td>5.33</td>\n",
              "      <td>36.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e86f834-2bbb-4beb-b919-c46150a25063')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7e86f834-2bbb-4beb-b919-c46150a25063 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7e86f834-2bbb-4beb-b919-c46150a25063');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#create feature and array target from such given data\n",
        "X = data.drop('medv',axis=1).values\n",
        "y = data['medv'].values"
      ],
      "metadata": {
        "id": "Xit7gUOfcUUn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Predicting house value from a single feature(No. of rooms)\n",
        "X_rooms=X[: ,5]"
      ],
      "metadata": {
        "id": "ElwLL9oody04"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(X_rooms), type(y)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G8GNFNHJesKs",
        "outputId": "c9aec387-983a-4c8f-b893-d6141c2cc175"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(numpy.ndarray, numpy.ndarray)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_rooms.shape,y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g1brrj6CfL6h",
        "outputId": "fd4cb6d0-f2e5-41fa-8251-9342caf0d440"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((506,), (506,))"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_rooms=X_rooms.reshape(-2,1)\n",
        "y = y.reshape(-2,1)"
      ],
      "metadata": {
        "id": "fH1HPTcMfb75"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_rooms.shape,y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VlICY7LHgKYY",
        "outputId": "9c288f0e-bfde-4084-c55a-64e5b69c2042"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((506, 1), (506, 1))"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plotting house values vs no. of rooms\n",
        "plt.scatter(X_rooms,y)\n",
        "plt.xlabel('Number of rooms')\n",
        "plt.ylabel('Value of house /100($)')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "02yOQxQkgVdV",
        "outputId": "d770e5d2-b1e8-4f47-950c-c143bd918b01"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Fitting a Regression model\n",
        "reg=linear_model.LinearRegression()\n",
        "reg.fit(X_rooms,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cawVwkkfjn7-",
        "outputId": "6e3ff50d-a3c8-44fc-e5ae-bf049b29bd66"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Evaluating the model in training data only\n",
        "from sklearn.metrics import mean_absolute_error,r2_score,mean_squared_error\n",
        "y_pred = reg.predict(X_rooms)\n",
        "print(f'MAE={mean_absolute_error(y, y_pred)}')\n",
        "print(f'MSE={mean_squared_error(y,y_pred)}')\n",
        "print(f'RMSE={np.sqrt(mean_squared_error(y,y_pred))}')\n",
        "print(f'R_2={r2_score(y,y_pred)}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sr1G2WZJmwok",
        "outputId": "1c0c0680-d0d8-43b2-cfcc-d46056199e62"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE=4.4477729015322325\n",
            "MSE=43.60055177116956\n",
            "RMSE=6.603071389222561\n",
            "R_2=0.48352545599133423\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.utils.fixes import linspace\n"
      ],
      "metadata": {
        "id": "2STJsQhcqxmT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prediction_space=np.linspace(min(X_rooms),max(X_rooms)).reshape(-1,1)"
      ],
      "metadata": {
        "id": "HkjMCx9mwfke"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(X_rooms,y,color='red')\n",
        "plt.plot(X_rooms, reg.predict(X_rooms),color='blue', linewidth=4)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "ktFRhrmori_z",
        "outputId": "d38c9333-1707-417d-9727-f2765e88ecbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(X_rooms, y, color='pink')\n",
        "plt.plot(prediction_space, reg.predict(prediction_space),color='yellow',linewidth=2)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "Zal6pY_Ztc1M",
        "outputId": "ab32d0a2-29af-4baa-99bc-27f3ee60b356"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}